{"componentChunkName":"component---src-templates-post-js","path":"/cheatsheet/22-05-14/","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p>MLOps를 위한 도구들의 사용법을 명령어 위주로 정리하고 있습니다. 대부분은 공식 문서의 내용을 참고하고 있고, 그 외 내용을 참고하게 되는 경우에는 글 내용에 언급하거나 reference에 추가하고 있습니다. 현재는 공부 진행 상황에 따라서 내용을 계속해서 추가하는 중에 있습니다. </p>\n</blockquote>\n<h3 id=\"docker\" style=\"position:relative;\"><a href=\"#docker\" aria-label=\"docker permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Docker</h3>\n<h5 id=\"commands\" style=\"position:relative;\"><a href=\"#commands\" aria-label=\"commands permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Commands</h5>\n<ul>\n<li><code class=\"language-text\">docker pull [OPTIONS] NAME[:TAG|@DIGEST]</code>: Docker Hub로부터 이미지 다운로드</li>\n<li><code class=\"language-text\">docker push [OPTIONS] NAME[:TAG]</code>: Docker Hub로 이미지 업로드</li>\n<li><code class=\"language-text\">docker create [OPTIONS] IMAGE [COMMAND] [ARG...]</code>: 이미지로부터 새 컨테이너 생성</li>\n<li><code class=\"language-text\">docker stop [OPTIONS] CONTAINER [CONTAINER...]</code>: 작동중인 컨테이너를 stop. (<em>memory release</em>)</li>\n<li><code class=\"language-text\">docker start [OPTIONS] CONTAINER [CONTAINER...]</code>: stop 상태의 컨테이너를 시작</li>\n<li><code class=\"language-text\">docker run [OPTIONS] IMAGE [COMMAND] [ARG...]</code>: 이미지 다운로드 후, 컨테이너 생성(create) 후, 컨테이너 시작(start). 옵션은 <a href=\"https://docs.docker.com/engine/reference/commandline/run/#options\">이곳</a> 참고</li>\n<li><code class=\"language-text\">docker build [OPTIONS] PATH | URL | -</code>: Dockerfile로부터 이미지 빌드</li>\n<li><code class=\"language-text\">docker rename CONTAINER NEW_NAME</code>: 컨테이너 이름 변경</li>\n<li><code class=\"language-text\">docker pause CONTAINER [CONTAINER...]</code>: 작동중인 컨테이너를 pause. 컨테이너 프로세스를 stop하지는 않고 대기 시켜놓는 것 (<em>keep memory</em>).  kill, stop과의 차이점은 <a href=\"https://www.gistshare.com/2018/11/kill-stop-and-pause-docker-commands.html#summary\">이곳</a> 참고</li>\n<li><code class=\"language-text\">docker unpause CONTAINER [CONTAINER...]</code>: pause 상태의 컨테이너를 unpause</li>\n<li><code class=\"language-text\">docker exec [OPTIONS] CONTAINER COMMAND [ARG...]</code>: 작동중인 컨테이너에서 명령어 실행</li>\n<li><code class=\"language-text\">docker rm [OPTIONS] CONTAINER [CONTAINER...]</code>: 컨테이너 삭제</li>\n<li>\n<p><code class=\"language-text\">docker ps [OPTIONS]</code>: 컨테이너 목록 확인</p>\n<ul>\n<li><code class=\"language-text\">-a, --all</code>: 컨테이너는 종료되어도 삭제되지 않고 남아있기 때문에, -a 옵션 사용시 exited 컨테이너까지 확인 가능</li>\n</ul>\n</li>\n<li><code class=\"language-text\">docker logs [OPTIONS] CONTAINER</code>: 컨테이너 로그 보기</li>\n<li><code class=\"language-text\">docker stats [OPTIONS] [CONTAINER...]</code>: 컨테이너의 리소스 사용량 확인</li>\n<li><code class=\"language-text\">docker images [OPTIONS] [REPOSITORY[:TAG]]</code>: 이미지 목록 확인</li>\n<li><code class=\"language-text\">docker rmi [OPTIONS] IMAGE [IMAGE...]</code>: 이미지 삭제</li>\n</ul>\n<h5 id=\"options\" style=\"position:relative;\"><a href=\"#options\" aria-label=\"options permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Options</h5>\n<ul>\n<li><code class=\"language-text\">--volume, -v</code>: 컨테이너 내부 디렉토리를 로컬 컴퓨터의 디렉토리에 마운트</li>\n</ul>\n<h5 id=\"dockerfile\" style=\"position:relative;\"><a href=\"#dockerfile\" aria-label=\"dockerfile permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dockerfile</h5>\n<p>이미지 제작을 하나의 파일로 관리 가능</p>\n<ul>\n<li><code class=\"language-text\">FROM [--platform=&lt;platform&gt;] &lt;image&gt;[:&lt;tag&gt;] [AS &lt;name&gt;]</code>: 베이스 이미지를 지정. 반드시 하나는 지정해야 함</li>\n<li><code class=\"language-text\">RUN &lt;command&gt;</code> 혹은 <code class=\"language-text\">RUN [&quot;executable&quot;, &quot;param1&quot;, &quot;param2&quot;]</code> (exec form): 명령어를 그대로 실행. Linux에서는 내부적으로 <code class=\"language-text\">/bin/sh -c</code> 뒤에 명령어를 실행</li>\n<li><code class=\"language-text\">WORKDIR /path/to/workdir</code>: 작업을 위한 기본 디렉토리 설정</li>\n<li><code class=\"language-text\">VOLUME [&quot;/data&quot;]</code>: 컨테이너 외부 파일시스템 마운트 지점 설정</li>\n<li><code class=\"language-text\">COPY [--chown=&lt;user&gt;:&lt;group&gt;] &lt;src&gt;... &lt;dest&gt;</code>: 파일이나 디렉토리를 이미지로 복사</li>\n<li><code class=\"language-text\">ADD [--chown=&lt;user&gt;:&lt;group&gt;] &lt;src&gt;... &lt;dest&gt;</code>:  파일이나 디렉토리를 이미지로 복사. URL도 입력 가능</li>\n<li><code class=\"language-text\">EXPOSE &lt;port&gt; [&lt;port&gt;/&lt;protocol&gt;...]</code>: 컨테이너가 실행 시 listen할 포트 설정</li>\n<li><code class=\"language-text\">ENV &lt;key&gt;=&lt;value&gt; ...</code>: 컨테이너에서 사용할 환경변수 지정</li>\n<li><code class=\"language-text\">CMD [&quot;executable&quot;,&quot;param1&quot;,&quot;param2&quot;]</code>: 컨테이너가 실행되었을 때 실행되는 기본 명령어. shell form 형태는 <a href=\"https://docs.docker.com/engine/reference/builder/#cmd\">이곳</a> 참고</li>\n<li><code class=\"language-text\">LABEL &lt;key&gt;=&lt;value&gt; &lt;key&gt;=&lt;value&gt; &lt;key&gt;=&lt;value&gt; ...</code>: 이미지에 메타데이터 추가. 메타데이터 통해 이미지에 대한 정보 쉽게 파악 가능</li>\n</ul>\n<h5 id=\"compose-file\" style=\"position:relative;\"><a href=\"#compose-file\" aria-label=\"compose file permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Compose file</h5>\n<p>멀티 컨테이너 어플리케이션 관리를 위한 파일로, 컨테이너 실행에 필요한 옵션이나, 실행 순서, 의존성 등의 내용을 하나의 파일로 관리 가능. 아래는 <code class=\"language-text\">docker-compose.yml</code> 파일 예시</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"3.9\"</span>\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">web</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span> .\n    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"8000:5000\"</span>\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> .<span class=\"token punctuation\">:</span>/code\n      <span class=\"token punctuation\">-</span> logvolume01<span class=\"token punctuation\">:</span>/var/log\n    <span class=\"token key atrule\">links</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> redis\n  <span class=\"token key atrule\">redis</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> redis\n<span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">logvolume01</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">version</code>: 첫 줄에 적는 compose file format 버전.  3만 적으면 버전 3 중에서 최신 버전 사용. 자세한 내용은 <a href=\"%EC%B2%AB%20%EC%A4%84%EC%97%90%20%EC%A0%81%EB%8A%94\">이곳</a> 참고</li>\n<li><code class=\"language-text\">services</code>: 실행하려는 컨테이너들을 정의. 위 예시에는 web과 redis라는 두 개의 서비스 존재</li>\n<li><code class=\"language-text\">build</code>: docker build 명령 실행할 디렉터리 경로</li>\n<li><code class=\"language-text\">ports</code>: 사용할 포트 (HOST:CONTAINER)</li>\n<li><code class=\"language-text\">volumes</code>: 로컬 컴퓨터의 디렉토리에 마운트</li>\n<li><code class=\"language-text\">links</code>: 다른 서비스 컨테이너와의 네트워크 링크를 정의 (SERVICE:ALIAS 혹은 SERVICE). 컴포즈 파일 버전 3 이후로는 links 사용하지 않더라도 한 네트워크 안에 있는 서비스끼리 통신가능</li>\n<li><code class=\"language-text\">image</code>: 해당 서비스가 사용할 이미지</li>\n<li><code class=\"language-text\">docker-compose up [options] [--scale SERVICE=NUM...] [SERVICE...]</code>: <code class=\"language-text\">docker-compose.yml</code> 파일 따라 서비스 실행</li>\n<li><code class=\"language-text\">docker-compose down [options]</code>: 서비스 지움</li>\n<li><code class=\"language-text\">docker-compose start [SERVICE...]</code>: stop 되어있던 서비스 시작</li>\n<li><code class=\"language-text\">docker-compose stop [options] [SERVICE...]</code>: 서비스 stop</li>\n<li><code class=\"language-text\">docker-compose ps</code>: 현재 실행중인 서비스 상태 확인</li>\n</ul>\n<h3 id=\"kubernetes\" style=\"position:relative;\"><a href=\"#kubernetes\" aria-label=\"kubernetes permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Kubernetes</h3>\n<h3 id=\"mlflow\" style=\"position:relative;\"><a href=\"#mlflow\" aria-label=\"mlflow permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MLflow</h3>\n<ul>\n<li>Tracking: ML 실험과 관련된 모든 결과물을 기록 및 조회하기 위한 기능 제공</li>\n<li>Project: 재현을 위한 패키징 기능 제공</li>\n<li>Models: 다양한 플랫폼에서 모델 배포 및 추론을 관리하기 위한 기능 제공 (key concept: <strong><em>flavors</em></strong>)</li>\n<li>Model Registry: 전체 라이프사이클을 공동 관리하기 위한 central model store 제공</li>\n</ul>\n<h5 id=\"mlflow-tracking\" style=\"position:relative;\"><a href=\"#mlflow-tracking\" aria-label=\"mlflow tracking permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MLflow Tracking</h5>\n<ul>\n<li><strong>Parameter, Metrics, Artifcats, Tags and Notes</strong></li>\n</ul>\n<p>(TODO). MLflow docs 빠르게 쭉 훑고, 중요한 내용만 기록하기</p>\n<h5 id=\"mlflow-projects\" style=\"position:relative;\"><a href=\"#mlflow-projects\" aria-label=\"mlflow projects permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MLflow Projects</h5>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">name: cifar10_initial\n\ndocker_env:\n  image: shibui/ml-system-in-actions:training_pattern_cifar10_0.0.1\n  volumes: [&quot;$(pwd)/data:/opt/data&quot;, &quot;/tmp/ml-system-in-actions/chapter2_training/cifar10/mlruns:/tmp/mlruns&quot;]\n\nentry_points:\n  train:\n    parameters:\n      upstream: {type: string, default: &quot;&quot;}\n      downstream: {type: string, default: /opt/data/model/}\n      epochs: {type: int, default: 1}\n\t\t\t...\n    command: |\n      python -m src.train \\\n        --upstream {upstream} \\\n        --downstream {downstream} \\\n        --epochs {epochs} \\\n\t\t\t\t...</code></pre></div>\n<h5 id=\"mlflow-models\" style=\"position:relative;\"><a href=\"#mlflow-models\" aria-label=\"mlflow models permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MLflow Models</h5>\n<h5 id=\"mlflow-model-registry\" style=\"position:relative;\"><a href=\"#mlflow-model-registry\" aria-label=\"mlflow model registry permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MLflow Model Registry</h5>\n<h3 id=\"kubeflow\" style=\"position:relative;\"><a href=\"#kubeflow\" aria-label=\"kubeflow permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Kubeflow</h3>\n<h5 id=\"istio\" style=\"position:relative;\"><a href=\"#istio\" aria-label=\"istio permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Istio</h5>\n<h3 id=\"references\" style=\"position:relative;\"><a href=\"#references\" aria-label=\"references permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>References</h3>\n<ul>\n<li><a href=\"https://docs.docker.com/reference/\">Docker docs - Reference documentation</a></li>\n<li><a href=\"https://mlflow.org/docs/latest/index.html\">MLflow documentation</a></li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/Archive/22-05-14-MLOps%20Cheat%20Sheet/#docker\">Docker</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"/Archive/22-05-14-MLOps%20Cheat%20Sheet/#commands\">Commands</a></li>\n<li><a href=\"/Archive/22-05-14-MLOps%20Cheat%20Sheet/#options\">Options</a></li>\n<li><a href=\"/Archive/22-05-14-MLOps%20Cheat%20Sheet/#dockerfile\">Dockerfile</a></li>\n<li><a href=\"/Archive/22-05-14-MLOps%20Cheat%20Sheet/#compose-file\">Compose file</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"/Archive/22-05-14-MLOps%20Cheat%20Sheet/#kubernetes\">Kubernetes</a></li>\n<li>\n<p><a href=\"/Archive/22-05-14-MLOps%20Cheat%20Sheet/#mlflow\">MLflow</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"/Archive/22-05-14-MLOps%20Cheat%20Sheet/#mlflow-tracking\">MLflow Tracking</a></li>\n<li><a href=\"/Archive/22-05-14-MLOps%20Cheat%20Sheet/#mlflow-projects\">MLflow Projects</a></li>\n<li><a href=\"/Archive/22-05-14-MLOps%20Cheat%20Sheet/#mlflow-models\">MLflow Models</a></li>\n<li><a href=\"/Archive/22-05-14-MLOps%20Cheat%20Sheet/#mlflow-model-registry\">MLflow Model Registry</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/Archive/22-05-14-MLOps%20Cheat%20Sheet/#kubeflow\">Kubeflow</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"/Archive/22-05-14-MLOps%20Cheat%20Sheet/#istio\">Istio</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"/Archive/22-05-14-MLOps%20Cheat%20Sheet/#references\">References</a></li>\n</ul>","frontmatter":{"path":"/cheatsheet/22-05-14/","title":"MLOps Cheat Sheet","category":"Cheat Sheet","date":"2022-05-14"}}},"pageContext":{}},"staticQueryHashes":["2390655019","256249292","63159454"]}