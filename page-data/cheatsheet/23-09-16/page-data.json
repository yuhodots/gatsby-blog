{"componentChunkName":"component---src-templates-post-js","path":"/cheatsheet/23-09-16/","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p> Python project packaging과 관련하여 poetry 사용법과 pyproject.toml 작성 방법에 대해 간단히 기록합니다.</p>\n</blockquote>\n<ul>\n<li>과거에는 python package 제작시 setuptools를 활용하여 <code class=\"language-text\">setup.py</code>, <code class=\"language-text\">setup.cfg</code>에 package 정보를 적고, 이를 twine 등을 통해 PyPI에 등록하는 절차를 거쳤지만, 최근에는 <code class=\"language-text\">pypoject.toml</code>을 활용하여 패키징하는 형태로 대부분 바뀌는 중</li>\n<li>관련하여 <a href=\"https://github.com/carlosperate/awesome-pyproject\">awesome-pyproject</a> 저장소에서 다양한 설명과 예시 확인 가능</li>\n</ul>\n<h3 id=\"poetry\" style=\"position:relative;\"><a href=\"#poetry\" aria-label=\"poetry permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Poetry</h3>\n<ul>\n<li>Poetry는 python의 dependency management와 packaging을 돕는 툴. 자세한 설명은 <a href=\"https://python-poetry.org/docs/\">공식 문서</a> 참고</li>\n<li><code class=\"language-text\">.toml</code>, <code class=\"language-text\">.lock</code>을 통해 의존성을 관리하기 때문에 프로젝트마다 가상환경 하나하나 설정해주던 기존의 pip의 귀찮음을 해결가능</li>\n<li><code class=\"language-text\">curl -sSL https://install.python-poetry.org | python3</code>: installation</li>\n<li><code class=\"language-text\">poetry new ${project_name}</code>: create project. (or use <code class=\"language-text\">poetry init</code>)</li>\n<li><code class=\"language-text\">poetry add ${package_name}</code>: add dependency</li>\n<li><code class=\"language-text\">poetry remove ${package_name}</code>: remove dependency</li>\n<li><code class=\"language-text\">poetry install</code>: install dependencies from poetry.lock</li>\n<li><code class=\"language-text\">poetry check</code>: check validity of pyproject.toml</li>\n<li><code class=\"language-text\">poetry update</code>: update dependecies. same with <code class=\"language-text\">rm poetry.lock</code> + <code class=\"language-text\">poetry install</code></li>\n<li><code class=\"language-text\">poetry build</code>: builds the source and wheels archives (e.g., <strong>tarball, wheel</strong>)</li>\n<li><code class=\"language-text\">poerty publish</code>: publish to PyPI (need to run <code class=\"language-text\">poetry build</code> first)</li>\n<li><code class=\"language-text\">poetry env use /full/path/to/python</code>: tell poetry which python version to use for the current project (for switching between environments)</li>\n</ul>\n<h3 id=\"pyprojecttoml\" style=\"position:relative;\"><a href=\"#pyprojecttoml\" aria-label=\"pyprojecttoml permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>pyproject.toml</h3>\n<ul>\n<li>아래는 poetry 저장소에서 제공하고 있는 <code class=\"language-text\">.toml</code> 파일 작성 예시</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"toml\"><pre class=\"language-toml\"><code class=\"language-toml\"><span class=\"token punctuation\">[</span><span class=\"token table class-name\">tool.poetry</span><span class=\"token punctuation\">]</span>\n<span class=\"token key property\">name</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"my-package\"</span>\n<span class=\"token key property\">version</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"0.1.0\"</span>\n<span class=\"token key property\">description</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"The description of the package\"</span>\n\n<span class=\"token key property\">license</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"MIT\"</span>\n\n<span class=\"token key property\">authors</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"NAME &lt;name@gmail.com>\"</span>\n<span class=\"token punctuation\">]</span>\n\n<span class=\"token key property\">repository</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"https://github.com/python-poetry/poetry\"</span>\n<span class=\"token key property\">homepage</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"https://python-poetry.org\"</span>\n\n<span class=\"token comment\"># README file(s) are used as the package description</span>\n<span class=\"token key property\">readme</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"README.md\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"LICENSE\"</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># Keywords (translated to tags on the package index)</span>\n<span class=\"token key property\">keywords</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"packaging\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"poetry\"</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token punctuation\">[</span><span class=\"token table class-name\">tool.poetry.dependencies</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\"># Compatible Python versions</span>\n<span class=\"token key property\">python</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\">=3.8\"</span>\n<span class=\"token comment\"># Standard dependency with semver constraints</span>\n<span class=\"token key property\">aiohttp</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"^3.8.1\"</span>\n<span class=\"token comment\"># Dependency with extras</span>\n<span class=\"token key property\">requests</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token key property\">version</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"^2.28\"</span><span class=\"token punctuation\">,</span> <span class=\"token key property\">extras</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"security\"</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span>\n<span class=\"token comment\"># Version-specific dependencies with prereleases allowed</span>\n<span class=\"token key property\">tomli</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token key property\">version</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"^2.0.1\"</span><span class=\"token punctuation\">,</span> <span class=\"token key property\">python</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"&lt;3.11\"</span><span class=\"token punctuation\">,</span> <span class=\"token key property\">allow-prereleases</span> <span class=\"token punctuation\">=</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span>\n<span class=\"token comment\"># Git dependencies</span>\n<span class=\"token key property\">cleo</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token key property\">git</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"https://github.com/python-poetry/cleo.git\"</span><span class=\"token punctuation\">,</span> <span class=\"token key property\">branch</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"master\"</span> <span class=\"token punctuation\">}</span>\n<span class=\"token comment\"># Optional dependencies (installed by extras)</span>\n<span class=\"token key property\">pendulum</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token key property\">version</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"^2.1.2\"</span><span class=\"token punctuation\">,</span> <span class=\"token key property\">optional</span> <span class=\"token punctuation\">=</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># Dependency groups are supported for organizing your dependencies</span>\n<span class=\"token punctuation\">[</span><span class=\"token table class-name\">tool.poetry.group.dev.dependencies</span><span class=\"token punctuation\">]</span>\n<span class=\"token key property\">pytest</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"^7.1.2\"</span>\n<span class=\"token key property\">pytest-cov</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"^3.0\"</span>\n\n<span class=\"token comment\"># ...and can be installed only when explicitly requested</span>\n<span class=\"token punctuation\">[</span><span class=\"token table class-name\">tool.poetry.group.docs</span><span class=\"token punctuation\">]</span>\n<span class=\"token key property\">optional</span> <span class=\"token punctuation\">=</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">[</span><span class=\"token table class-name\">tool.poetry.group.docs.dependencies</span><span class=\"token punctuation\">]</span>\n<span class=\"token key property\">Sphinx</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"^5.1.1\"</span>\n\n<span class=\"token comment\"># Python-style entrypoints and scripts are easily expressed</span>\n<span class=\"token punctuation\">[</span><span class=\"token table class-name\">tool.poetry.scripts</span><span class=\"token punctuation\">]</span>\n<span class=\"token key property\">my-script</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"my_package:main\"</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">[tool.poetry]</code>: <code class=\"language-text\">{package_name} = [{ include = &quot;{pacakge path}&quot; },]</code> 를 통해 특정 폴더를 패키지화</li>\n<li>\n<p><code class=\"language-text\">[tool.poetry.dependencies]</code>: 의존성 있는 패키지들 나열. <code class=\"language-text\">poetry add</code>로 패키지 추가 가능</p>\n<ul>\n<li><code class=\"language-text\">some_api = { path = &quot;some_directory/some_api&quot;, optional = true }</code> 이런식으로 세부 패키지마다 따로 관리할 수도 있음</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">[tool.poetry.group.{group name}.dependencies]</code>: 의존성을 그룹지어 둘 수 있음</p>\n<ul>\n<li><code class=\"language-text\">optional = true</code>로 설정해두면 <code class=\"language-text\">poetry install --with {group name}</code>로 설치 가능</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"toml\"><pre class=\"language-toml\"><code class=\"language-toml\"><span class=\"token punctuation\">[</span>tool<span class=\"token punctuation\">.</span>poetry<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">.</span><span class=\"token punctuation\">{</span>group name<span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n<span class=\"token key property\">optional</span> <span class=\"token punctuation\">=</span> <span class=\"token boolean\">true</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">[tool. poetry.extras]</code>:  <code class=\"language-text\">poetry install --extras &quot;{module name}&quot;</code> 혹은 <code class=\"language-text\">pip install &quot;.[module name]&quot;</code>으로 특정 모듈 다운받거나, <code class=\"language-text\">poetry install --all-extras</code>로 전체 extras 받을 수 있음</li>\n<li><code class=\"language-text\">[build-system]</code>: 필요한 build system 정의</li>\n<li><code class=\"language-text\">[tool.poetry.scripts]</code>: 패키지들을 설치한 뒤 터미널에서 특정 명령어로 바로 실행하기 위한 entrypoint</li>\n</ul>\n<h3 id=\"installing-packages\" style=\"position:relative;\"><a href=\"#installing-packages\" aria-label=\"installing packages permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Installing Packages</h3>\n<ul>\n<li>Installation with pip: git+https, https, git+ssh 등의 방법이 존재하며 형태는<code class=\"language-text\">pip install git+https://...</code></li>\n<li>Installation with git clone</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">git clone https://github.com/author_name/repo_path\ncd repo_path\npip install -e .\t# –editable option, install all\n# or you can use `poetry install --all-extras` if the package use poetry</code></pre></div>\n<ul>\n<li>Installation with pyproject.toml</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"toml\"><pre class=\"language-toml\"><code class=\"language-toml\"><span class=\"token punctuation\">[</span><span class=\"token table class-name\">tool.poetry.dependencies</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">{</span>package_name<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span><span class=\"token key property\">git</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"ssh://git@github.com/{author}/{package_name}.git\"</span><span class=\"token punctuation\">,</span> <span class=\"token key property\">tag</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"{tag or version}\"</span><span class=\"token punctuation\">,</span> <span class=\"token key property\">extras</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"{extra_name}\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>Installation sub-directory: (1) dependencies 상에서 <code class=\"language-text\">optional = true</code> 설정, (2) extras에 선언 후에 (3) <code class=\"language-text\">poetry install --extras &quot;{module name}&quot;</code> 혹은 <code class=\"language-text\">pip install &quot;.[module name]&quot;</code>으로 설치</li>\n<li>Dokerizer 하는 경우에도 별 차이 없이 pip 혹은 poetry 통해서 다운받으면 되고, private repo 설정해둔 경우 <a href=\"https://stackoverflow.com/questions/55929417/how-to-securely-git-clone-pip-install-a-private-repository-into-my-docker-image\">이 방법</a> 참고</li>\n</ul>","tableOfContents":"<ul>\n<li><a href=\"/Archive/23-09-16-Packaging%20Python%20Projects/#poetry\">Poetry</a></li>\n<li><a href=\"/Archive/23-09-16-Packaging%20Python%20Projects/#pyprojecttoml\">pyproject.toml</a></li>\n<li><a href=\"/Archive/23-09-16-Packaging%20Python%20Projects/#installing-packages\">Installing Packages</a></li>\n</ul>","frontmatter":{"path":"/cheatsheet/23-09-16/","title":"Packaging Python Projects","category":"Cheat Sheet","date":"2023-09-16"}}},"pageContext":{}},"staticQueryHashes":["2390655019","256249292","63159454"]}